# ====================[ .gitconfig                        ]====================
#
# --------------------( SYNOPSIS                          )--------------------
# Git dotfile, globally configuring git for the current user.

# ....................{ INCLUDES                          }....................
# List of the absolute or relative paths of all files conforming to the syntax
# of this file to be imported into this file, defined as one "path" entry for
# each such file. Note that "path" entries:
#
# * Are silently ignored if not found.
# * Prefix relative paths by the absolute path of the directory containing the
#   current file.
# * Expand a prefixing "~/" to the home directory of the current user.
# * Do *NOT* expand environment variables (e.g., "${HOME}").
# * *MUST* be absolute or relative paths; shell glob syntax is *NOT* supported,
#   excluding the aforementioned "~/" expansion.
[include]
    # Absolute path of the user-specific git configuration file defining all
    # "[user]" credentials for the current user. For security, credentials are
    # sequestered into a non-world-readable file *NOT* published to GitHub.
    #
    # The contents of this file should resemble:
    #
    #     [user]
    #         name = <ENTER NAME UNQUOTED HERE>
    #         email = <ENTER E-MAIL UNQUOTED HERE>
    path = ~/.gitconfig.d/user.cfg

# ....................{ OTHER                             }....................
[alias]
    a = add
    aa = add --all
    b = branch
    c = commit --allow-empty
    ca = commit --amend
    cl = clone
    co = checkout
    cp = cherry-pick
    d = diff
    di = diff
    f = fetch
    l = log -m --numstat
    ls = ls-files
    pl = pull
    ps = push
    r = rebase
    rc = rebase --continue
    ri = rebase --interactive
    rem = remote
    s = status
    sh = stash
    st = status
    t = tag
[branch]
    autosetuprebase = always
[branch "main"]
    rebase = true
[branch "master"]
    rebase = true
[color]
    ui = auto
[commit]
    # Allow commit messages to contain lines prefixed by "#" characters (e.g.,
    # Markdown headers) *WITHOUT* erroneously treating those lines as ignorable
    # comments and thus implicitly removing those lines.
    cleanup = scissors
[core]
    editor = vim
    pager = less -FRSX
[init]
    defaultBranch = main
[pull]
    rebase = true
[push]
    default = current
[rebase]
    stat = true
[rerere]
    enabled = true
[status]
    showuntrackedfiles = all
[user]
	email = leycec@gmail.com
	name = leycec
